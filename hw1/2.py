import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport scipy.stats as stimport statsmodels.api as smfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacfplt.style.use('ggplot')Y = np.zeros(500)Y[0] = 50+np.random.normal(0,20)for i in range(1,len(Y)):    Y[i] = 50 + 0.6 * Y[i-1] + np.random.normal(0,20)fig, ax = plt.subplots(figsize= (20,6), dpi = 200)ax.plot(Y, label = "ACF")ax.legend()plt.show()def RMSE(sales, forecast):    forecast = forecast    forecast_delay = len(sales) - len(forecast)    return ((np.sum((forecast-sales[forecast_delay:])**2)) / len(forecast)) ** 0.5plt.rcParams.update({'figure.figsize':(9,7), 'figure.dpi':120})plot_acf(Y)naive_forecast = np.array([Y[i-1] for i in range(1,len(Y))])print("RMSE starting from period 100:", RMSE(Y, naive_forecast[99:]))